pipeline {
    agent any
    environment {
        ANSIBLE_HOST_KEY_CHECKING = 'False'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: 'github',
                    url: 'https://github.com/badr-2001/jenkins_project.git'
            }
        }

        stage('PrepareEnv') {
            steps {
                echo '[INFO] Installing dependencies...'
                sh '''
                  sudo apt-get update -y
                  sudo apt-get install -y ansible curl
                  ansible --version
                '''
            }
        }

        stage('CreateFilesystem') {
            steps {
                echo '[INFO] Creating and mounting filesystems...'
                ansiblePlaybook(
                    playbook: 'main-playbook.yml',
                    inventory: 'inventory/hosts.ini',
                    credentialsId: 'ansible',
                    extras: '--tags filesystem'
                )
            }
        }

        stage('InstallApache') {
            steps {
                echo '[INFO] Installing and configuring Apache2...'
                ansiblePlaybook(
                    playbook: 'main-playbook.yml',
                    inventory: 'inventory/hosts.ini',
                    credentialsId: 'ansible',
                    extras: '--tags apache2'
                )
            }
        }

        stage('LogRotate') {
            steps {
                echo '[INFO] Installing logrotate...'
                ansiblePlaybook(
                    playbook: 'main-playbook.yml',
                    inventory: 'inventory/hosts.ini',
                    credentialsId: 'ansible',
                    extras: '--tags logrotate'
                )
            }
        }

        stage('ValidateDeploy') {
            steps {
                script {
                    sh '''
                      echo "[INFO] Checking Apache page..."
                      ansible front -i inventory/hosts.ini -m uri \
                        -a "url=http://{{ ansible_host }}/ return_content=yes" \
                        | grep "Hello World"
                    '''
                }
            }
        }
    }

    post {
        success {
            slackSend(channel: '#jenkins', color: 'good',
                message: "Job *${env.JOB_NAME}* [${env.BUILD_NUMBER}] succeeded (<${env.BUILD_URL}|Open>)")
        }
        failure {
            slackSend(channel: '#jenkins', color: 'danger',
                message: "Job *${env.JOB_NAME}* [${env.BUILD_NUMBER}] failed (<${env.BUILD_URL}|Open>)")
        }
    }
}
